---
- name: Initialise DNS recode variables at Domain
  ansible.builtin.set_fact:
    dns_domain: "{{ gather_dns_domain.key }}"
    dns_domain_setting: "{{ gather_dns_domain.value | default({}, true) }}"
    dns_domain_recodes: {}
- name: A recode value
  ansible.builtin.import_tasks:
    file: recode/A.yml
  when:
    - not dns_domain_setting.skip_a | default(false)
    - (dns_domain_setting.ipaddr.ipv4 is defined or ansible_facts.default_ipv4.address is defined)
- name: AAAA recode value
  ansible.builtin.import_tasks:
    file: recode/AAAA.yml
  when:
    - not dns_domain_setting.skip_aaaa | default(false)
    - (dns_domain_setting.ipaddr.ipv6 is defined or ansible_facts.default_ipv6.address is defined)
- name: SPF recode value
  ansible.builtin.import_tasks:
    file: recode/SPF.yml
  when: not (dns_domain_setting.skip_spf | default(false))
- name: DKIM recode value
  ansible.builtin.import_tasks:
    file: recode/DKIM.yml
- name: DMARC recode value
  ansible.builtin.import_tasks:
    file: recode/postmaster.yml
  when: dns_domain_setting.postmaster is defined
- name: DMARC recode value
  ansible.builtin.import_tasks:
    file: recode/DMARC.yml
  when: dns_domain == dns_domain | community.dns.get_registrable_domain
- name: Combine DNS recode variable
  ansible.builtin.set_fact:
    dns_recodes: "{{ dns_recodes | combine({dns_domain: dns_domain_recodes}, recursive=true) }}"
