# code: language=ansible
---
- name: Import dependency task
  ansible.builtin.import_tasks:
    file: dependency.yml
  tags:
    - role_dns_dependency
- name: Gather IP Address
  ansible.builtin.setup:
    gather_subset:
      - default_ipv4
      - default_ipv6
- name: Pickup registrable domain
  ansible.builtin.set_fact:
    tmp_domains: "{{ (tmp_domains | default([])) + [(tmp_dns_domain.key | community.dns.get_registrable_domain)] }}"
  loop: "{{ dns_domains | dict2items }}"
  loop_control:
    loop_var: tmp_dns_domain
- name: Unique filter registrable domain variable
  ansible.builtin.set_fact:
    tmp_domains: "{{ tmp_domains | unique }}"
- name: Add registrable domain to dns_domains variable
  ansible.builtin.set_fact:
    dns_domains: "{{ dns_domains | combine({tmp_domain: dns_auto_append_option}) }}"
  when: dns_domains[tmp_domain] is undefined
  loop: "{{ tmp_domains }}"
  loop_control:
    loop_var: tmp_domain
- name: Append CNAME domains
  ansible.builtin.set_fact:
    dns_domains: "{{ dns_domains | combine({tmp_domain: dns_auto_append_cname_option}) }}"
  when: dns_domains[tmp_domain] is undefined
  vars:
    tmp_domain: "{{ dns_cname.1 + '.' + dns_cname.0.key }}"
    dns_auto_append_cname_option: "{{ dns_auto_append_option | combine({'cname': (dns_cname.0.key | community.dns.remove_registrable_domain | default('@', true))}) }}"
  loop: "{{ query('ansible.builtin.subelements', (dns_domains | dict2items), 'value.cnames', {'skip_missing': True}) }}"
  loop_control:
    loop_var: dns_cname
- name: Initialise dkim key table
  ansible.builtin.set_fact:
    dns_dkim_key_table_data: {}
- name: Check opendkim role variable
  when:
    - opendkim_selector is defined
    - opendkim_table_config_dir is defined
  block:
    - name: Set dns_dkim_key_table variable task
      ansible.builtin.import_tasks:
        file: parse_dkim_key_table.yml
- name: Create output dir
  ansible.builtin.file:
    path: "{{ dns_recode_output_dir.endswith('/') | ternary(dns_recode_output_dir[:-1], dns_recode_output_dir) }}"
    state: directory
    mode: "0755"
  when: dns_recode_output_dir | length > 0
  become: false
  delegate_to: 127.0.0.1
- name: Gather DNS recode info
  ansible.builtin.include_tasks:
    file: gather_dns_recode.yml
  loop: "{{ dns_domains | dict2items }}"
  loop_control:
    loop_var: gather_dns_domain
    label: gather_dns_domain.key
- name: Generate zone file
  when:
    - dns_recode_output_dir | length > 0
    - dns_zones | length > 0
  become: false
  delegate_to: 127.0.0.1
  block:
    - name: Generate zone file
      ansible.builtin.template:
        src: zone_file.txt.j2
        dest: "{{ dns_recode_output_dir.endswith('/') | ternary(dns_recode_output_dir[:-1], dns_recode_output_dir) }}/zone_{{ dns_zone_file.key }}.txt"
        mode: "0644"
      loop: "{{ dns_zones | dict2items }}"
      loop_control:
        loop_var: dns_zone_file
        label: "{{ dns_zone_file.key }}"
